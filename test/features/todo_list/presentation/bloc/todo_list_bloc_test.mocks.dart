// Mocks generated by Mockito 5.4.6 from annotations
// in todo/test/features/todo_list/presentation/bloc/todo_list_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo/features/ai_brief/domain/entities/brief_config.dart'
    as _i8;
import 'package:todo/features/ai_brief/domain/entities/brief_response.dart'
    as _i2;
import 'package:todo/features/ai_brief/domain/repositories/ai_brief_repository.dart'
    as _i6;
import 'package:todo/features/todo_list/domain/entities/todo.dart' as _i5;
import 'package:todo/features/todo_list/domain/repositories/todo_repository.dart'
    as _i3;
import 'package:todo/models/todo_item.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBriefResponse_0 extends _i1.SmartFake implements _i2.BriefResponse {
  _FakeBriefResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TodoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRepository extends _i1.Mock implements _i3.TodoRepository {
  MockTodoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.Todo>> getAllTodos() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTodos, []),
            returnValue: _i4.Future<List<_i5.Todo>>.value(<_i5.Todo>[]),
          )
          as _i4.Future<List<_i5.Todo>>);

  @override
  _i4.Future<void> insertTodo(_i5.Todo? todo) =>
      (super.noSuchMethod(
            Invocation.method(#insertTodo, [todo]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateTodo(_i5.Todo? todo) =>
      (super.noSuchMethod(
            Invocation.method(#updateTodo, [todo]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteTodo(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTodo, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> toggleTodoStatus(int? id, bool? isCompleted) =>
      (super.noSuchMethod(
            Invocation.method(#toggleTodoStatus, [id, isCompleted]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [AiBriefRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAiBriefRepository extends _i1.Mock implements _i6.AiBriefRepository {
  MockAiBriefRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.BriefResponse> generateBrief({
    required List<_i7.TodoItem>? tasks,
    required _i8.BriefConfig? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateBrief, [], {
              #tasks: tasks,
              #config: config,
            }),
            returnValue: _i4.Future<_i2.BriefResponse>.value(
              _FakeBriefResponse_0(
                this,
                Invocation.method(#generateBrief, [], {
                  #tasks: tasks,
                  #config: config,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.BriefResponse>);
}
