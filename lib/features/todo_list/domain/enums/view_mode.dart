import 'package:flutter/material.dart';

/// View modes pro kategorizaci √∫kol≈Ø podle ƒçasu
///
/// Inspirov√°no Org Mode Agenda z Tauri TODO app.
/// Ka≈æd√Ω mode p≈ôedstavuje jin√Ω pohled na √∫koly.
enum ViewMode {
  /// V≈°echny √∫koly (default)
  all,

  /// Dnes - co mus√≠≈° dnes udƒõlat
  /// (overdue + deadlines dnes + scheduled dnes)
  today,

  /// T√Ωden - pl√°n na cel√Ω t√Ωden
  /// (seskupeno po dnech, p≈ô√≠≈°t√≠ch 7 dn√≠)
  week,

  /// Nadch√°zej√≠c√≠ - co tƒõ ƒçek√° v p≈ô√≠≈°t√≠ch 7 dnech
  /// (deadlines v p≈ô√≠≈°t√≠ch 7 dnech, bez dnes a overdue)
  upcoming,

  /// Po term√≠nu - √∫koly kde jsi proklastnul
  /// (dueDate < today && !isCompleted)
  overdue,

  /// Custom view (tag-based filtr)
  /// Indik√°tor ≈æe je to custom view vytvo≈ôen√Ω u≈æivatelem
  custom;

  /// Zobrazovac√≠ text pro UI
  String get label {
    return switch (this) {
      ViewMode.all => 'üìã V≈°echny',
      ViewMode.today => 'üìÖ Dnes',
      ViewMode.week => 'üóìÔ∏è T√Ωden',
      ViewMode.upcoming => '‚è∞ Nadch√°zej√≠c√≠',
      ViewMode.overdue => '‚ö†Ô∏è Overdue',
      ViewMode.custom => 'Custom', // Dynamick√Ω label se nastav√≠ jinde
    };
  }

  /// Kr√°tk√Ω popis view mode
  String get description {
    return switch (this) {
      ViewMode.all => 'Zobrazit v≈°echny √∫koly',
      ViewMode.today => 'Co mus√≠≈° dnes udƒõlat',
      ViewMode.week => 'Pl√°n na cel√Ω t√Ωden',
      ViewMode.upcoming => 'Co tƒõ ƒçek√° v p≈ô√≠≈°t√≠ch 7 dnech',
      ViewMode.overdue => '√ökoly po term√≠nu',
      ViewMode.custom => 'Vlastn√≠ pohled podle tagu',
    };
  }

  /// Emoji pro view mode (kompaktn√≠ UI)
  String get emoji {
    return switch (this) {
      ViewMode.all => 'üìã',
      ViewMode.today => 'üìÖ',
      ViewMode.week => 'üóìÔ∏è',
      ViewMode.upcoming => '‚è∞',
      ViewMode.overdue => '‚ö†Ô∏è',
      ViewMode.custom => 'üè∑Ô∏è', // Dynamick√© emoji se nastav√≠ jinde
    };
  }

  /// Ikona pro view mode (DEPRECATED - pou≈æij emoji m√≠sto)
  @Deprecated('Pou≈æij emoji getter m√≠sto icon')
  IconData get icon {
    return switch (this) {
      ViewMode.all => Icons.list,
      ViewMode.today => Icons.today,
      ViewMode.week => Icons.view_week,
      ViewMode.upcoming => Icons.schedule,
      ViewMode.overdue => Icons.warning,
      ViewMode.custom => Icons.filter_alt,
    };
  }
}

/// Extension pro ViewMode - helper metody
extension ViewModeExtension on ViewMode {
  /// Je to custom view?
  bool get isCustom => this == ViewMode.custom;
}
